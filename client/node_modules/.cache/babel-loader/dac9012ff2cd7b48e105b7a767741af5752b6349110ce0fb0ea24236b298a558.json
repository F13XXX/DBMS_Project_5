{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/Uni/Semester_3/DBMS/01_Final_Project/client/src/components/TaskCompletion.js\";\nimport React from 'react';\nimport { Box, Typography, LinearProgress, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCompletion = ({\n  taskCompletions\n}) => {\n  if (!taskCompletions || taskCompletions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \"Assignment Completion by Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No assignment data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Group tasks by area and calculate progress\n  const areaGroups = taskCompletions.reduce((acc, task) => {\n    const areaName = task.area_name;\n    if (!acc[areaName]) {\n      acc[areaName] = {\n        name: areaName,\n        completed: 0,\n        total: 0\n      };\n    }\n    acc[areaName].total += 1;\n    if (task.is_correct) {\n      acc[areaName].completed += 1;\n    }\n    return acc;\n  }, {});\n  const areas = Object.values(areaGroups);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      gutterBottom: true,\n      children: \"Assignment Completion by Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      direction: \"column\",\n      children: areas.map(area => {\n        const progress = area.total > 0 ? area.completed / area.total * 100 : 0;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 3,\n              border: '1px solid #ddd',\n              borderRadius: '8px',\n              backgroundColor: '#e3f2fd',\n              boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: '#1565c0',\n                mb: 1\n              },\n              children: area.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: progress,\n              sx: {\n                width: '100%',\n                height: '10px',\n                borderRadius: '5px',\n                backgroundColor: '#bbdefb',\n                '& .MuiLinearProgress-bar': {\n                  backgroundColor: '#2196f3'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#1565c0',\n                mt: 1\n              },\n              children: [area.completed, \" / \", area.total, \" tasks completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, area.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskCompletion;\nexport default TaskCompletion;\nvar _c;\n$RefreshReg$(_c, \"TaskCompletion\");","map":{"version":3,"names":["React","Box","Typography","LinearProgress","Grid","jsxDEV","_jsxDEV","TaskCompletion","taskCompletions","length","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","areaGroups","reduce","acc","task","areaName","area_name","name","completed","total","is_correct","areas","Object","values","container","spacing","direction","map","area","progress","item","xs","sx","p","border","borderRadius","backgroundColor","boxShadow","display","flexDirection","alignItems","justifyContent","color","mb","value","width","height","mt","_c","$RefreshReg$"],"sources":["/home/david/Documents/Uni/Semester_3/DBMS/01_Final_Project/client/src/components/TaskCompletion.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, LinearProgress, Grid } from '@mui/material';\n\nconst TaskCompletion = ({ taskCompletions }) => {\n  if (!taskCompletions || taskCompletions.length === 0) {\n    return (\n      <Box>\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n          Assignment Completion by Area\n        </Typography>\n        <Typography variant=\"body1\">No assignment data available.</Typography>\n      </Box>\n    );\n  }\n\n  // Group tasks by area and calculate progress\n  const areaGroups = taskCompletions.reduce((acc, task) => {\n    const areaName = task.area_name;\n\n    if (!acc[areaName]) {\n      acc[areaName] = { name: areaName, completed: 0, total: 0 };\n    }\n\n    acc[areaName].total += 1;\n    if (task.is_correct) {\n      acc[areaName].completed += 1;\n    }\n\n    return acc;\n  }, {});\n\n  const areas = Object.values(areaGroups);\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n        Assignment Completion by Area\n      </Typography>\n      <Grid container spacing={3} direction=\"column\">\n        {areas.map((area) => {\n          const progress = area.total > 0 ? (area.completed / area.total) * 100 : 0;\n\n          return (\n            <Grid item xs={12} key={area.name}>\n              <Box\n                sx={{\n                  p: 3,\n                  border: '1px solid #ddd',\n                  borderRadius: '8px',\n                  backgroundColor: '#e3f2fd',\n                  boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'flex-start',\n                  justifyContent: 'center',\n                }}\n              >\n                <Typography variant=\"h6\" sx={{ color: '#1565c0', mb: 1 }}>\n                  {area.name}\n                </Typography>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={progress}\n                  sx={{\n                    width: '100%',\n                    height: '10px',\n                    borderRadius: '5px',\n                    backgroundColor: '#bbdefb',\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: '#2196f3',\n                    },\n                  }}\n                />\n                <Typography variant=\"body2\" sx={{ color: '#1565c0', mt: 1 }}>\n                  {area.completed} / {area.total} tasks completed\n                </Typography>\n              </Box>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TaskCompletion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}