{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/Uni/Semester_3/DBMS/0_Final_Project/client/src/components/TaskAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Grid, Paper, Typography, CircularProgress, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHART_COLORS = ['#0088FE', '#FE7600'];\nconst TaskAnalytics = ({\n  username\n}) => {\n  _s();\n  const [analyticsData, setAnalyticsData] = useState(null); //State that stores analytics data from API\n  const [loading, setLoading] = useState(true); // State that tracks if data is still loading\n  const [error, setError] = useState(null); // state to handle errors during fetch\n  const API_BASE_URL = 'http://localhost:5000/api'; // Adjust for implementation in nosqlconceptstool\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch task-analytics data\n        const response = await fetch(`${API_BASE_URL}/users/${username}/task-analytics`);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n        // Parse response and update state\n        const data = await response.json();\n        setAnalyticsData(data);\n        setError(null); // Clear previous errors\n      } catch (error) {\n        console.error('Fetch error:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false); //Mark loading as complete\n      }\n    };\n    fetchData();\n  }, [username]); // Rerun effect, if username changes\n\n  // Convert query restults to number and cut decmials\n  const processedTimeData = analyticsData ? analyticsData.totalProcessingTime.map(item => ({\n    ...item,\n    total_time: Math.round(Number(item.total_time)),\n    global_avg: Math.round(Number(item.global_avg))\n  })) : [];\n\n  // Convert query results to float and cut decimals to 2\n  const processedDifficultyData = analyticsData && analyticsData.averageDifficulty ? analyticsData.averageDifficulty.map(item => ({\n    ...item,\n    personal_avg_diff: parseFloat(parseFloat(item.personal_avg_diff).toFixed(2), 2),\n    global_avg_diff: parseFloat(parseFloat(item.global_avg_diff).toFixed(2))\n  })) : [];\n\n  // Display loading while fetching data\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Display error if fetch went wrong\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      p: 2,\n      bgcolor: \"error.light\",\n      color: \"error.contrastText\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Error loading analytics: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            sx: {\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              mb: 1\n            },\n            children: \"Time Spent on Assignments by User vs Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: processedTimeData && processedTimeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n                data: processedTimeData,\n                margin: {\n                  top: 10,\n                  right: 20,\n                  left: 10,\n                  bottom: 25\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"area_name\",\n                  label: {\n                    value: '',\n                    position: 'bottom',\n                    fontSize: '20px',\n                    fontFamily: 'Arial'\n                  },\n                  tick: {\n                    fontSize: '16px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  domain: [0, 'auto'],\n                  label: {\n                    value: 'Time Spent (Minutes)',\n                    angle: -90,\n                    position: 'center',\n                    fontSize: '20px',\n                    fontFamily: 'Arial',\n                    dx: -20\n                  },\n                  tick: {\n                    fontSize: '14px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  formatter: value => [`${value} minutes`, 'Total Time']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"total_time\",\n                  name: \"User Time Spent\",\n                  fill: CHART_COLORS[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"global_avg\",\n                  name: \"Average Time Spent\",\n                  stroke: CHART_COLORS[2],\n                  strokeWidth: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  wrapperStyle: {\n                    bottom: 25,\n                    left: 125,\n                    padding: '5px',\n                    width: 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No processing time data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            height: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            sx: {\n              textAlign: 'center',\n              fontFamily: 'Arial',\n              mb: 1\n            },\n            children: \"Average Difficulty Rating by User vs Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: processedDifficultyData && processedDifficultyData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n                data: processedDifficultyData,\n                margin: {\n                  top: 10,\n                  right: 20,\n                  left: 10,\n                  bottom: 25\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"area_name\",\n                  label: {\n                    value: '',\n                    position: 'bottom',\n                    fontSize: '20px',\n                    fontFamily: 'Arial'\n                  },\n                  tick: {\n                    fontSize: '16px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  domain: [0, 5],\n                  ticks: [0, 1, 2, 3, 4, 5],\n                  label: {\n                    value: 'Difficulty',\n                    angle: -90,\n                    position: 'center',\n                    fontSize: '20px',\n                    fontFamily: 'Arial',\n                    dx: -20\n                  },\n                  tick: {\n                    fontSize: '14px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  formatter: value => [`${value}`, 'Rating']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"personal_avg_diff\",\n                  name: \"User Rating\",\n                  fill: CHART_COLORS[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"global_avg_diff\",\n                  name: \"Average Rating\",\n                  stroke: CHART_COLORS[2],\n                  strokeWidth: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                  wrapperStyle: {\n                    bottom: 25,\n                    left: 125,\n                    padding: '5px',\n                    width: 'auto'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No processing time data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 1\n  }, this);\n};\n_s(TaskAnalytics, \"8/NFAwfzFS5w2e1c9qtsDdOa1A0=\");\n_c = TaskAnalytics;\nexport default TaskAnalytics;\nvar _c;\n$RefreshReg$(_c, \"TaskAnalytics\");","map":{"version":3,"names":["React","useEffect","useState","ComposedChart","Bar","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Grid","Paper","Typography","CircularProgress","Box","jsxDEV","_jsxDEV","CHART_COLORS","TaskAnalytics","username","_s","analyticsData","setAnalyticsData","loading","setLoading","error","setError","API_BASE_URL","fetchData","response","fetch","ok","Error","status","data","json","console","message","processedTimeData","totalProcessingTime","map","item","total_time","Math","round","Number","global_avg","processedDifficultyData","averageDifficulty","personal_avg_diff","parseFloat","toFixed","global_avg_diff","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","p","bgcolor","color","variant","container","spacing","xs","md","sx","height","component","textAlign","fontFamily","mb","alignItems","length","width","margin","top","right","left","bottom","strokeDasharray","dataKey","label","value","position","fontSize","tick","domain","angle","dx","formatter","name","fill","type","stroke","strokeWidth","wrapperStyle","padding","ticks","_c","$RefreshReg$"],"sources":["/home/david/Documents/Uni/Semester_3/DBMS/0_Final_Project/client/src/components/TaskAnalytics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  ComposedChart, \n  Bar,\n  Line,\n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { \n  Grid, \n  Paper, \n  Typography, \n  CircularProgress,\n  Box\n} from '@mui/material';\n\nconst CHART_COLORS = ['#0088FE', '#FE7600'];\n\nconst TaskAnalytics = ({username}) => {\n  const [analyticsData, setAnalyticsData] = useState(null); //State that stores analytics data from API\n  const [loading, setLoading] = useState(true); // State that tracks if data is still loading\n  const [error, setError] = useState(null); // state to handle errors during fetch\n  const API_BASE_URL = 'http://localhost:5000/api'; // Adjust for implementation in nosqlconceptstool\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch task-analytics data\n        const response = await fetch(`${API_BASE_URL}/users/${username}/task-analytics`);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        \n        // Parse response and update state\n        const data = await response.json();\n        setAnalyticsData(data);\n\n        setError(null); // Clear previous errors\n      } catch (error) {\n        console.error('Fetch error:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false); //Mark loading as complete\n      }\n    };\n    \n    fetchData();\n  }, [username]); // Rerun effect, if username changes\n\n  // Convert query restults to number and cut decmials\n  const processedTimeData = analyticsData\n    ? analyticsData.totalProcessingTime.map(item => ({\n        ...item,\n        total_time: Math.round(Number(item.total_time)),\n        global_avg: Math.round(Number(item.global_avg)),\n      }))\n    : [];\n\n  // Convert query results to float and cut decimals to 2\n  const processedDifficultyData = analyticsData && analyticsData.averageDifficulty\n  ? analyticsData.averageDifficulty.map(item => ({\n      ...item,\n      personal_avg_diff: parseFloat(parseFloat(item.personal_avg_diff).toFixed(2), 2),\n      global_avg_diff: parseFloat(parseFloat(item.global_avg_diff).toFixed(2)),\n    }))\n  : [];\n\n  // Display loading while fetching data\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" mt={4}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Display error if fetch went wrong\n  if (error) {\n    return (\n      <Box mt={4} p={2} bgcolor=\"error.light\" color=\"error.contrastText\">\n        <Typography variant=\"body1\">Error loading analytics: {error}</Typography>\n      </Box>\n    );\n  }\n  \n  return (\n<Box>\n  <Grid container spacing={3}>\n    {/* First Box/Graph */}\n    <Grid item xs={12} md={6}>\n      <Paper sx={{p: 2, height: 400}}>\n        <Typography \n          variant=\"h6\" \n          component=\"h2\" \n          sx={{textAlign: 'center', fontFamily: 'Arial', mb: 1}}\n        >\n          Time Spent on Assignments by User vs Average\n        </Typography>\n\n        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n          {processedTimeData && processedTimeData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart\n                data={processedTimeData}\n                margin={{top: 10, right: 20, left: 10, bottom: 25}}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"area_name\" \n                  label={{value: '', position: 'bottom', fontSize: '20px', fontFamily: 'Arial'}} \n                  tick={{fontSize: '16px'}} \n                />\n                <YAxis \n                  domain={[0, 'auto']}\n                  label={{\n                    value: 'Time Spent (Minutes)',\n                    angle: -90,\n                    position: 'center',\n                    fontSize: '20px',\n                    fontFamily: 'Arial',\n                    dx: -20\n                  }} \n                  tick={{ fontSize: '14px' }}\n                />\n                <Tooltip formatter={(value) => [`${value} minutes`, 'Total Time']} />\n                <Bar dataKey=\"total_time\" name=\"User Time Spent\" fill={CHART_COLORS[0]} />\n                <Line type=\"monotone\" dataKey=\"global_avg\" name=\"Average Time Spent\" stroke={CHART_COLORS[2]} strokeWidth={2} />\n                <Legend \n                  wrapperStyle={{\n                    bottom: 25,\n                    left: 125,\n                    padding: '5px',\n                    width: 'auto',\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          ) : (\n            <Typography variant=\"body2\">No processing time data available</Typography>\n          )}\n        </Box>\n      </Paper>\n    </Grid>\n\n    {/* Second Box/Graph */}\n    <Grid item xs={12} md={6}>\n      <Paper sx={{p: 2, height: 400}}>\n        <Typography \n          variant=\"h6\" \n          component=\"h2\" \n          sx={{textAlign: 'center', fontFamily: 'Arial', mb: 1}}\n        >\n          Average Difficulty Rating by User vs Average\n        </Typography>\n\n        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n          {processedDifficultyData && processedDifficultyData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart\n                data={processedDifficultyData}\n                margin={{top: 10, right: 20, left: 10, bottom: 25}}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"area_name\" \n                  label={{value: '', position: 'bottom', fontSize: '20px', fontFamily: 'Arial'}} \n                  tick={{fontSize: '16px'}} \n                />\n                <YAxis\n                  domain={[0, 5]}\n                  ticks={[0, 1, 2, 3, 4, 5]}\n                  label={{\n                    value: 'Difficulty',\n                    angle: -90,\n                    position: 'center',\n                    fontSize: '20px',\n                    fontFamily: 'Arial',\n                    dx: -20\n                  }} \n                  tick={{fontSize: '14px'}}\n                />\n                <Tooltip formatter={(value) => [`${value}`, 'Rating']} />\n                <Bar dataKey=\"personal_avg_diff\" name=\"User Rating\" fill={CHART_COLORS[0]} />\n                <Line type=\"monotone\" dataKey=\"global_avg_diff\" name=\"Average Rating\" stroke={CHART_COLORS[2]} strokeWidth={2} />\n                <Legend \n                  wrapperStyle={{\n                    bottom: 25,\n                    left: 125,\n                    padding: '5px',\n                    width: 'auto',\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          ) : (\n            <Typography variant=\"body2\">No processing time data available</Typography>\n          )}\n        </Box>\n      </Paper>\n    </Grid>\n  </Grid>\n</Box>\n    );\n};\n\nexport default TaskAnalytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}