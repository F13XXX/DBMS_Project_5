{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/Uni/Semester_3/DBMS/01_Final_Project/client/src/components/TaskAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Box, Container, Grid, CircularProgress } from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskAnalytics = () => {\n  _s();\n  const [taskData, setTaskData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch data from backend\n    const fetchTaskData = async () => {\n      try {\n        // In a real app, this would fetch data from an API that joins\n        // user_task_data with task_statements\n        const response = await fetch('/api/task-analytics');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setTaskData(data);\n        setLoading(false);\n      } catch (error) {\n        setError('Error fetching data: ' + error.message);\n        setLoading(false);\n      }\n    };\n    fetchTaskData();\n  }, []);\n\n  // Process data for difficulty chart\n  const processDifficultyData = () => {\n    if (!taskData.length) return [];\n\n    // Group by tasknumber and calculate average difficulty\n    const difficultyByTask = taskData.reduce((acc, item) => {\n      const taskNumber = item.tasknumber;\n      if (!acc[taskNumber]) {\n        acc[taskNumber] = {\n          sum: 0,\n          count: 0\n        };\n      }\n      acc[taskNumber].sum += item.difficulty_level;\n      acc[taskNumber].count += 1;\n      return acc;\n    }, {});\n\n    // Calculate overall average\n    let totalSum = 0;\n    let totalCount = 0;\n    Object.values(difficultyByTask).forEach(item => {\n      totalSum += item.sum;\n      totalCount += item.count;\n    });\n    const overallAvg = totalCount > 0 ? totalSum / totalCount : 0;\n\n    // Convert to array format for the chart\n    const chartData = Object.entries(difficultyByTask).map(([taskNumber, data]) => ({\n      name: `Assignment ${taskNumber}`,\n      avgDifficulty: parseFloat((data.count > 0 ? data.sum / data.count : 0).toFixed(2))\n    }));\n\n    // Add overall average\n    chartData.push({\n      name: 'Overall',\n      avgDifficulty: parseFloat(overallAvg.toFixed(2))\n    });\n    return chartData;\n  };\n\n  // Process data for time chart\n  const processTimeData = () => {\n    if (!taskData.length) return [];\n\n    // Group by tasknumber and calculate average processing time\n    const timeByTask = taskData.reduce((acc, item) => {\n      const taskNumber = item.tasknumber;\n      if (!acc[taskNumber]) {\n        acc[taskNumber] = {\n          sum: 0,\n          count: 0\n        };\n      }\n      acc[taskNumber].sum += item.processing_time;\n      acc[taskNumber].count += 1;\n      return acc;\n    }, {});\n\n    // Calculate overall average\n    let totalSum = 0;\n    let totalCount = 0;\n    Object.values(timeByTask).forEach(item => {\n      totalSum += item.sum;\n      totalCount += item.count;\n    });\n    const overallAvg = totalCount > 0 ? totalSum / totalCount : 0;\n\n    // Convert to array format for the chart\n    const chartData = Object.entries(timeByTask).map(([taskNumber, data]) => ({\n      name: `Assignment ${taskNumber}`,\n      avgTime: parseFloat((data.count > 0 ? data.sum / data.count : 0).toFixed(2))\n    }));\n\n    // Add overall average\n    chartData.push({\n      name: 'Overall',\n      avgTime: parseFloat(overallAvg.toFixed(2))\n    });\n    return chartData;\n  };\n  const difficultyData = processDifficultyData();\n  const timeData = processTimeData();\n  if (loading) return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      sx: {\n        mt: 4\n      },\n      children: \"Task Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Average Difficulty by Assignment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: difficultyData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 40\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\",\n                  angle: -45,\n                  textAnchor: \"end\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  label: {\n                    value: 'Difficulty Level',\n                    angle: -90,\n                    position: 'insideLeft'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"avgDifficulty\",\n                  name: \"Average Difficulty\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Average Processing Time by Assignment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 400\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: timeData,\n                margin: {\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 40\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\",\n                  angle: -45,\n                  textAnchor: \"end\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  label: {\n                    value: 'Time (seconds)',\n                    angle: -90,\n                    position: 'insideLeft'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"avgTime\",\n                  name: \"Average Processing Time\",\n                  fill: \"#82ca9d\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskAnalytics, \"iVcbZ4/d9hx1GZKsoQt8Osl13eo=\");\n_c = TaskAnalytics;\nexport default TaskAnalytics;\nvar _c;\n$RefreshReg$(_c, \"TaskAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Box","Container","Grid","CircularProgress","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","TaskAnalytics","_s","taskData","setTaskData","loading","setLoading","error","setError","fetchTaskData","response","fetch","ok","Error","data","json","message","processDifficultyData","length","difficultyByTask","reduce","acc","item","taskNumber","tasknumber","sum","count","difficulty_level","totalSum","totalCount","Object","values","forEach","overallAvg","chartData","entries","map","name","avgDifficulty","parseFloat","toFixed","push","processTimeData","timeByTask","processing_time","avgTime","difficultyData","timeData","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","color","maxWidth","variant","gutterBottom","align","container","spacing","xs","md","p","height","width","margin","top","right","left","bottom","strokeDasharray","dataKey","angle","textAnchor","label","value","position","fill","_c","$RefreshReg$"],"sources":["/home/david/Documents/Uni/Semester_3/DBMS/01_Final_Project/client/src/components/TaskAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Box, Container, Grid, CircularProgress } from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst TaskAnalytics = () => {\n  const [taskData, setTaskData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch data from backend\n    const fetchTaskData = async () => {\n      try {\n        // In a real app, this would fetch data from an API that joins\n        // user_task_data with task_statements\n        const response = await fetch('/api/task-analytics');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setTaskData(data);\n        setLoading(false);\n      } catch (error) {\n        setError('Error fetching data: ' + error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchTaskData();\n  }, []);\n\n  // Process data for difficulty chart\n  const processDifficultyData = () => {\n    if (!taskData.length) return [];\n\n    // Group by tasknumber and calculate average difficulty\n    const difficultyByTask = taskData.reduce((acc, item) => {\n      const taskNumber = item.tasknumber;\n      \n      if (!acc[taskNumber]) {\n        acc[taskNumber] = { sum: 0, count: 0 };\n      }\n      \n      acc[taskNumber].sum += item.difficulty_level;\n      acc[taskNumber].count += 1;\n      \n      return acc;\n    }, {});\n\n    // Calculate overall average\n    let totalSum = 0;\n    let totalCount = 0;\n    \n    Object.values(difficultyByTask).forEach(item => {\n      totalSum += item.sum;\n      totalCount += item.count;\n    });\n    \n    const overallAvg = totalCount > 0 ? totalSum / totalCount : 0;\n\n    // Convert to array format for the chart\n    const chartData = Object.entries(difficultyByTask).map(([taskNumber, data]) => ({\n      name: `Assignment ${taskNumber}`,\n      avgDifficulty: parseFloat((data.count > 0 ? data.sum / data.count : 0).toFixed(2))\n    }));\n\n    // Add overall average\n    chartData.push({\n      name: 'Overall',\n      avgDifficulty: parseFloat(overallAvg.toFixed(2))\n    });\n\n    return chartData;\n  };\n\n  // Process data for time chart\n  const processTimeData = () => {\n    if (!taskData.length) return [];\n\n    // Group by tasknumber and calculate average processing time\n    const timeByTask = taskData.reduce((acc, item) => {\n      const taskNumber = item.tasknumber;\n      \n      if (!acc[taskNumber]) {\n        acc[taskNumber] = { sum: 0, count: 0 };\n      }\n      \n      acc[taskNumber].sum += item.processing_time;\n      acc[taskNumber].count += 1;\n      \n      return acc;\n    }, {});\n\n    // Calculate overall average\n    let totalSum = 0;\n    let totalCount = 0;\n    \n    Object.values(timeByTask).forEach(item => {\n      totalSum += item.sum;\n      totalCount += item.count;\n    });\n    \n    const overallAvg = totalCount > 0 ? totalSum / totalCount : 0;\n\n    // Convert to array format for the chart\n    const chartData = Object.entries(timeByTask).map(([taskNumber, data]) => ({\n      name: `Assignment ${taskNumber}`,\n      avgTime: parseFloat((data.count > 0 ? data.sum / data.count : 0).toFixed(2))\n    }));\n\n    // Add overall average\n    chartData.push({\n      name: 'Overall',\n      avgTime: parseFloat(overallAvg.toFixed(2))\n    });\n\n    return chartData;\n  };\n\n  const difficultyData = processDifficultyData();\n  const timeData = processTimeData();\n\n  if (loading) return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n      <CircularProgress />\n    </Box>\n  );\n  \n  if (error) return (\n    <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n      <Typography color=\"error\">{error}</Typography>\n    </Box>\n  );\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ mt: 4 }}>\n        Task Analytics\n      </Typography>\n\n      <Grid container spacing={4}>\n        {/* Difficulty Chart */}\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Average Difficulty by Assignment\n            </Typography>\n            <Box sx={{ height: 400 }}>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  data={difficultyData}\n                  margin={{ top: 20, right: 30, left: 20, bottom: 40 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" />\n                  <YAxis label={{ value: 'Difficulty Level', angle: -90, position: 'insideLeft' }} />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"avgDifficulty\" name=\"Average Difficulty\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          </Paper>\n        </Grid>\n\n        {/* Time Chart */}\n        <Grid item xs={12} md={6}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Average Processing Time by Assignment\n            </Typography>\n            <Box sx={{ height: 400 }}>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  data={timeData}\n                  margin={{ top: 20, right: 30, left: 20, bottom: 40 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" />\n                  <YAxis label={{ value: 'Time (seconds)', angle: -90, position: 'insideLeft' }} />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"avgTime\" name=\"Average Processing Time\" fill=\"#82ca9d\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default TaskAnalytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}