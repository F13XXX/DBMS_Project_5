{"ast":null,"code":"var _jsxFileName = \"/home/david/Documents/Uni/Semester_3/DBMS/01_Final_Project/client/src/components/TaskCompletion.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, CircularProgress, Button, Menu, MenuItem, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCompletion = ({\n  taskCompletions\n}) => {\n  _s();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedArea, setSelectedArea] = React.useState(null);\n  const handleDropdownOpen = (event, area) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedArea(area);\n  };\n  const handleDropdownClose = () => {\n    setAnchorEl(null);\n  };\n  if (!taskCompletions || taskCompletions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: \"Assignment Completion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No assignment data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Group tasks by area\n  const areaGroups = {};\n  taskCompletions.forEach(task => {\n    if (!areaGroups[task.area_name]) {\n      areaGroups[task.area_name] = {\n        name: task.area_name,\n        completed: 0,\n        total: 0\n      };\n    }\n    areaGroups[task.area_name].total++;\n    if (task.is_correct) {\n      areaGroups[task.area_name].completed++;\n    }\n  });\n  const areas = Object.values(areaGroups);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      gutterBottom: true,\n      children: \"Assignment Completion by Area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: areas.map(area => {\n        const progress = area.completed / area.total * 100;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            sx: {\n              p: 3,\n              border: '1px solid #ddd',\n              borderRadius: '8px',\n              backgroundColor: '#e3f2fd',\n              boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n              height: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: progress,\n              size: 80,\n              thickness: 5,\n              sx: {\n                color: '#2196f3',\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                color: '#1565c0',\n                textAlign: 'center'\n              },\n              children: area.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#1565c0'\n              },\n              children: [area.completed, \" / \", area.total, \" tasks completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: e => handleDropdownOpen(e, area),\n              sx: {\n                mt: 2,\n                backgroundColor: '#2196f3',\n                '&:hover': {\n                  backgroundColor: '#1976d2'\n                },\n                borderRadius: '50px',\n                textTransform: 'none',\n                px: 3\n              },\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, area.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleDropdownClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDropdownClose,\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDropdownClose,\n        children: \"Mark as Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCompletion, \"XMFphJax6CWx9HJaXWHpi6Z+AdY=\");\n_c = TaskCompletion;\nexport default TaskCompletion;\nvar _c;\n$RefreshReg$(_c, \"TaskCompletion\");","map":{"version":3,"names":["React","Box","Typography","CircularProgress","Button","Menu","MenuItem","Grid","jsxDEV","_jsxDEV","TaskCompletion","taskCompletions","_s","anchorEl","setAnchorEl","useState","selectedArea","setSelectedArea","handleDropdownOpen","event","area","currentTarget","handleDropdownClose","length","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","areaGroups","forEach","task","area_name","name","completed","total","is_correct","areas","Object","values","container","spacing","map","progress","item","xs","sm","md","display","flexDirection","alignItems","justifyContent","sx","p","border","borderRadius","backgroundColor","boxShadow","height","value","size","thickness","color","mb","textAlign","onClick","e","mt","textTransform","px","open","Boolean","onClose","_c","$RefreshReg$"],"sources":["/home/david/Documents/Uni/Semester_3/DBMS/01_Final_Project/client/src/components/TaskCompletion.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, CircularProgress, Button, Menu, MenuItem, Grid } from '@mui/material';\n\nconst TaskCompletion = ({ taskCompletions }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedArea, setSelectedArea] = React.useState(null);\n\n  const handleDropdownOpen = (event, area) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedArea(area);\n  };\n\n  const handleDropdownClose = () => {\n    setAnchorEl(null);\n  };\n\n  if (!taskCompletions || taskCompletions.length === 0) {\n    return (\n      <Box>\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n          Assignment Completion\n        </Typography>\n        <Typography variant=\"body1\">No assignment data available.</Typography>\n      </Box>\n    );\n  }\n\n  // Group tasks by area\n  const areaGroups = {};\n  \n  taskCompletions.forEach((task) => {\n    if (!areaGroups[task.area_name]) {\n      areaGroups[task.area_name] = {\n        name: task.area_name,\n        completed: 0,\n        total: 0,\n      };\n    }\n    \n    areaGroups[task.area_name].total++;\n    if (task.is_correct) {\n      areaGroups[task.area_name].completed++;\n    }\n  });\n\n  const areas = Object.values(areaGroups);\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" component=\"h2\" gutterBottom>\n        Assignment Completion by Area\n      </Typography>\n      <Grid container spacing={3}>\n        {areas.map((area) => {\n          const progress = (area.completed / area.total) * 100;\n\n          return (\n            <Grid item xs={12} sm={6} md={6} key={area.name}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                sx={{\n                  p: 3,\n                  border: '1px solid #ddd',\n                  borderRadius: '8px',\n                  backgroundColor: '#e3f2fd',\n                  boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n                  height: '100%',\n                }}\n              >\n                <CircularProgress\n                  variant=\"determinate\"\n                  value={progress}\n                  size={80}\n                  thickness={5}\n                  sx={{ color: '#2196f3', mb: 2 }}\n                />\n                <Typography variant=\"h6\" sx={{ color: '#1565c0', textAlign: 'center' }}>\n                  {area.name}\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: '#1565c0' }}>\n                  {area.completed} / {area.total} tasks completed\n                </Typography>\n                <Button\n                  variant=\"contained\"\n                  onClick={(e) => handleDropdownOpen(e, area)}\n                  sx={{\n                    mt: 2,\n                    backgroundColor: '#2196f3',\n                    '&:hover': { backgroundColor: '#1976d2' },\n                    borderRadius: '50px',\n                    textTransform: 'none',\n                    px: 3,\n                  }}\n                >\n                  Options\n                </Button>\n              </Box>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleDropdownClose}\n      >\n        <MenuItem onClick={handleDropdownClose}>View Details</MenuItem>\n        <MenuItem onClick={handleDropdownClose}>Mark as Complete</MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default TaskCompletion;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}